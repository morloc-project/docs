== Forms of data and the GRIM model

```
U <-> I <1-n> T <?-?> S 
      |1      |1
       \1     /1
        \    /
          vv
          C <1-1> L_i <1-1> C_i
```

 * U  - User interface data
 * I  - Internal Morloc data
 * T  - Typed Morloc data
 * S  - Standard formats
 * C  - Common form
 * Li - Language-specific forms
 * Cu - Language-specific Cache

CDF - Common Data Format

The semantic type system can be partioned into 4 main groups (GRIM model).

=== General (G)

A structured type that can often map directly to the machine
type of specific languages, though this may be ambiguous when a given type
of data can map to multiple language-specific types. G maps uniquely to
a CDF. This is the lowest level type that generalizes across languages.

.Examples:
  * Integer
  * ProteinSeq, ProteinStructure
  * Table {col1 : Integer, col2 : String}

=== Resources (R)

Types that describe resources. This may be data outside of the CDF. It may be
databases.

.Examples:
  ** URL, Filename, Folder
  ** SQLDB
  ** FastaFile, FastaFile UniProt, FastaFile GeneBank
  ** Markdown, Markdown GitHub
  ** Music, MP3

=== Ideal (I)

A high-level idea that often does not contain enough information to
unambiguously map to a machine type.

.Examples:
  ** Protein
  ** Shoe, House
  ** Tree
  ** Symbol
  ** Music

=== Machine (M)

The data type within a specific language (e.g. AAStringSet or double). The
Machine type will closely follow type format for the specific language. Part of
building the binding for a new language is mapping `M<-->G`.

.Examples:
  ** (C) int, double, float, bool
  ** (R) integer, numeric, logical
  ** (R) AAStringSet
